// <auto-generated />
using System;
using DETP.data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DETP.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250527111703_change double")]
    partial class changedouble
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DETP.model.Assignee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CorrectiveAction")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("corrective_action");

                    b.Property<int?>("DecisionById")
                        .HasColumnType("int")
                        .HasColumnName("decision_by");

                    b.Property<DateTime?>("DecisionDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("decision_date");

                    b.Property<int>("FlowId")
                        .HasColumnType("int")
                        .HasColumnName("flow_id");

                    b.Property<string>("ObservationDetails")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ovservation_details");

                    b.Property<int>("ObservationId")
                        .HasColumnType("int")
                        .HasColumnName("observation_id");

                    b.Property<string>("PreventiveAction")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("preventive_action");

                    b.Property<string>("RootCauseAnalysis")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("root_cause_analysis");

                    b.Property<string>("TimeLoss")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("time_loss");

                    b.Property<string>("TimeValue")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("time_value");

                    b.Property<string>("ValueOfRectification")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("value_of_rectification");

                    b.HasKey("Id");

                    b.HasIndex("DecisionById");

                    b.ToTable("assignee");
                });

            modelBuilder.Entity("DETP.model.BusinessHead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssignToId")
                        .HasColumnType("int")
                        .HasColumnName("assign_to");

                    b.Property<string>("Decision")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("decision");

                    b.Property<int>("DecisionById")
                        .HasColumnType("int")
                        .HasColumnName("decision_by");

                    b.Property<DateTime?>("DecisionDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("decision_date");

                    b.Property<int>("FlowId")
                        .HasColumnType("int")
                        .HasColumnName("flow_id");

                    b.Property<string>("Input")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("input");

                    b.Property<int>("ObservationId")
                        .HasColumnType("int")
                        .HasColumnName("observation_id");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("remarks");

                    b.Property<string>("TargetDate")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("target_date");

                    b.HasKey("Id");

                    b.HasIndex("AssignToId");

                    b.HasIndex("DecisionById");

                    b.ToTable("business_head");
                });

            modelBuilder.Entity("DETP.model.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("department_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbr")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("department_abbr");

                    b.Property<long?>("DivisionId")
                        .HasColumnType("bigint")
                        .HasColumnName("division_id");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("department_name");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_on");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.ToTable("department");
                });

            modelBuilder.Entity("DETP.model.DeptHod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssignToId")
                        .HasColumnType("int")
                        .HasColumnName("assign_to");

                    b.Property<int?>("DecisionById")
                        .HasColumnType("int")
                        .HasColumnName("decision_by");

                    b.Property<DateTime?>("DecisionDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("decision_date");

                    b.Property<int>("FlowId")
                        .HasColumnType("int")
                        .HasColumnName("flow_id");

                    b.Property<int>("ObservationId")
                        .HasColumnType("int")
                        .HasColumnName("observation_id");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("remarks");

                    b.Property<string>("TimeLoss")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("timeloss");

                    b.Property<string>("TimeVal")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("timeval");

                    b.Property<string>("ValueRec")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("valuerec");

                    b.Property<string>("WithinTargetDate")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("within_target_date");

                    b.HasKey("Id");

                    b.HasIndex("AssignToId");

                    b.HasIndex("DecisionById");

                    b.ToTable("dept_hod");
                });

            modelBuilder.Entity("DETP.model.Division", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DivisionHeadId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("DivisionHeadId");

                    b.ToTable("Divisions");
                });

            modelBuilder.Entity("DETP.model.EicDetp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Decision")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("decision");

                    b.Property<int?>("DecisionById")
                        .HasColumnType("int")
                        .HasColumnName("decision_by");

                    b.Property<DateTime?>("DecisionDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("decision_date");

                    b.Property<int?>("FlowId")
                        .HasColumnType("int")
                        .HasColumnName("flow_id");

                    b.Property<string>("Job")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("job");

                    b.Property<string>("NonConformance")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("non_conformance");

                    b.Property<int?>("ObservationId")
                        .HasColumnType("int")
                        .HasColumnName("observation_id");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("remarks");

                    b.HasKey("Id");

                    b.HasIndex("DecisionById");

                    b.ToTable("eic_detp");
                });

            modelBuilder.Entity("DETP.model.HeadDetp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Decision")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("decision");

                    b.Property<int?>("DecisionById")
                        .HasColumnType("int")
                        .HasColumnName("decision_by");

                    b.Property<DateTime?>("DecisionDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("decision_date");

                    b.Property<int?>("FlowId")
                        .HasColumnType("int")
                        .HasColumnName("flow_id");

                    b.Property<string>("Job")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("job");

                    b.Property<string>("NonConformance")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("non_conformance");

                    b.Property<int?>("ObservationId")
                        .HasColumnType("int")
                        .HasColumnName("observation_id");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("remarks");

                    b.HasKey("Id");

                    b.HasIndex("DecisionById");

                    b.ToTable("head_detp");
                });

            modelBuilder.Entity("DETP.model.HodQaSha", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Decision")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("decision");

                    b.Property<int?>("DecisionById")
                        .HasColumnType("int")
                        .HasColumnName("decision_by");

                    b.Property<DateTime?>("DecisionDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("decision_date");

                    b.Property<int?>("FlowId")
                        .HasColumnType("int")
                        .HasColumnName("flow_id");

                    b.Property<string>("Job")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("job");

                    b.Property<string>("NonConformance")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("non_conformance");

                    b.Property<int?>("ObservationId")
                        .HasColumnType("int")
                        .HasColumnName("observation_id");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("remarks");

                    b.HasKey("Id");

                    b.HasIndex("DecisionById");

                    b.ToTable("hod_qa_sha");
                });

            modelBuilder.Entity("DETP.model.LoginLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datetime")
                        .HasColumnType("datetime2")
                        .HasColumnName("datetime");

                    b.Property<string>("Ip")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ip");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.ToTable("login_logs");
                });

            modelBuilder.Entity("DETP.model.ProjectIncharge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DecisionById")
                        .HasColumnType("int")
                        .HasColumnName("decision_by");

                    b.Property<DateTime?>("DecisionDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("decision_date");

                    b.Property<int>("FlowId")
                        .HasColumnType("int")
                        .HasColumnName("flow_id");

                    b.Property<int>("ObservationId")
                        .HasColumnType("int")
                        .HasColumnName("observation_id");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("remarks");

                    b.Property<string>("TimeLoss")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("timeloss");

                    b.Property<string>("TimeVal")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("timeval");

                    b.Property<string>("ValueRec")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("valuerec");

                    b.Property<string>("WithinTargetDate")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("within_target_date");

                    b.HasKey("Id");

                    b.HasIndex("DecisionById");

                    b.ToTable("project_incharge");
                });

            modelBuilder.Entity("DETP.model.QAFlow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Completed")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("completed");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("date");

                    b.Property<int?>("FromId")
                        .HasColumnType("int")
                        .HasColumnName("from_id");

                    b.Property<int?>("ObservationId")
                        .HasColumnType("int")
                        .HasColumnName("observation_id");

                    b.Property<string>("TableName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("table_name");

                    b.Property<int?>("ToId")
                        .HasColumnType("int")
                        .HasColumnName("to_id");

                    b.HasKey("Id");

                    b.HasIndex("FromId");

                    b.HasIndex("ObservationId");

                    b.HasIndex("ToId");

                    b.ToTable("qa_flow");
                });

            modelBuilder.Entity("DETP.model.QAObservation", b =>
                {
                    b.Property<int>("SerialNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("serial_no")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AreaOfConcern")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("area_of_concern");

                    b.Property<string>("Basics")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("basics");

                    b.Property<int?>("BusinessHeadId")
                        .HasColumnType("int")
                        .HasColumnName("business_head");

                    b.Property<DateTime?>("ComplianceTargetDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("compliance_target_date");

                    b.Property<string>("DepartmentId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("department");

                    b.Property<int?>("DeptHodId")
                        .HasColumnType("int")
                        .HasColumnName("dept_hod");

                    b.Property<long?>("DivisionId")
                        .HasColumnType("bigint")
                        .HasColumnName("division_id");

                    b.Property<int?>("HeadDetpId")
                        .HasColumnType("int")
                        .HasColumnName("head_detp");

                    b.Property<int?>("HodQaShaId")
                        .HasColumnType("int")
                        .HasColumnName("hod_qa_sha");

                    b.Property<string>("Job")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("job");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("location");

                    b.Property<string>("LogConfirmance")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("log_confirmance");

                    b.Property<string>("LogNonConfirmance")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("log_non_confirmance");

                    b.Property<DateTime?>("LoggedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("logged_date");

                    b.Property<string>("NatureOfConfirmance")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nature_of_confirmance");

                    b.Property<string>("NatureOfWork")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nature_of_work");

                    b.Property<int?>("NumberOfObservation")
                        .HasColumnType("int")
                        .HasColumnName("number_of_observation");

                    b.Property<int?>("ObservationById")
                        .HasColumnType("int")
                        .HasColumnName("observation_by");

                    b.Property<DateTime?>("ObservationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("observation_date");

                    b.Property<string>("Pno")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("p_no");

                    b.Property<int?>("ProjectInchargeId")
                        .HasColumnType("int")
                        .HasColumnName("project_incharge");

                    b.Property<int?>("QaOfficerId")
                        .HasColumnType("int")
                        .HasColumnName("qa_officer");

                    b.Property<string>("Site")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("site");

                    b.Property<int?>("SiteInchargeId")
                        .HasColumnType("int")
                        .HasColumnName("site_incharge");

                    b.Property<string>("Standard")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("standard");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("status");

                    b.Property<string>("TypeOfConfirmance")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("type_of_confirmance");

                    b.Property<string>("TypeOfObservation")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("type_of_observation");

                    b.Property<string>("VendorCode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vendor_code");

                    b.Property<string>("VendorName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vendor_name");

                    b.Property<string>("VisitNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("visit_no");

                    b.HasKey("SerialNo");

                    b.HasIndex("BusinessHeadId");

                    b.HasIndex("DeptHodId");

                    b.HasIndex("DivisionId");

                    b.HasIndex("HeadDetpId");

                    b.HasIndex("HodQaShaId");

                    b.HasIndex("ObservationById");

                    b.HasIndex("ProjectInchargeId");

                    b.HasIndex("QaOfficerId");

                    b.HasIndex("SiteInchargeId");

                    b.ToTable("qa_observation");
                });

            modelBuilder.Entity("DETP.model.QAOfficer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComplianceSatisfactory")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("compliance_satisfactory");

                    b.Property<int?>("DecisionById")
                        .HasColumnType("int")
                        .HasColumnName("decision_by");

                    b.Property<DateTime?>("DecisionDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("decision_date");

                    b.Property<int>("FlowId")
                        .HasColumnType("int")
                        .HasColumnName("flow_id");

                    b.Property<int>("ObservationId")
                        .HasColumnType("int")
                        .HasColumnName("observation_id");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("remarks");

                    b.Property<string>("WithinSlg")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("within_slg");

                    b.HasKey("Id");

                    b.HasIndex("DecisionById");

                    b.ToTable("qa_officer");
                });

            modelBuilder.Entity("DETP.model.QaAtt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("data");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("type");

                    b.Property<int>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("type_id");

                    b.HasKey("Id");

                    b.ToTable("qa_att");
                });

            modelBuilder.Entity("DETP.model.QaViolation.PenaltyDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Administrative")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FinancialPenalty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Max_amount")
                        .HasColumnType("float");

                    b.Property<long>("QaViolationCategoryId")
                        .HasColumnType("bigint");

                    b.Property<long>("QaViolationSubCategoryId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("QaViolationCategoryId");

                    b.HasIndex("QaViolationSubCategoryId")
                        .IsUnique();

                    b.ToTable("penalty_details");
                });

            modelBuilder.Entity("DETP.model.QaViolation.QaViolation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Attachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("ObservationDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ObservationId")
                        .HasColumnType("int");

                    b.Property<int?>("QAStatus")
                        .HasColumnType("int")
                        .HasColumnName("Status");

                    b.Property<long>("QaViolationCategoryId")
                        .HasColumnType("bigint");

                    b.Property<long>("QaViolationSubCategoryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("VendorEmail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ObservationId");

                    b.HasIndex("QaViolationCategoryId");

                    b.HasIndex("QaViolationSubCategoryId");

                    b.ToTable("qa_violations");
                });

            modelBuilder.Entity("DETP.model.QaViolation.QaViolationApproval", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApprovedById")
                        .HasColumnType("int");

                    b.Property<string>("Attachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("PenaltyAmountCorrect")
                        .HasColumnType("bit");

                    b.Property<bool>("PenaltyClauseCorrect")
                        .HasColumnType("bit");

                    b.Property<long>("QaViolationFlowId")
                        .HasColumnType("bigint");

                    b.Property<long>("QaViolationId")
                        .HasColumnType("bigint");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("RoleId");

                    b.ToTable("qa_violation_approval");
                });

            modelBuilder.Entity("DETP.model.QaViolation.QaViolationCFOReview", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApprovedById")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DebitNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DeducationDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("QaViolationFlowId")
                        .HasColumnType("bigint");

                    b.Property<long>("QaViolationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.ToTable("qa_violation_cfo_review");
                });

            modelBuilder.Entity("DETP.model.QaViolation.QaViolationCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("qa_violation_categories");
                });

            modelBuilder.Entity("DETP.model.QaViolation.QaViolationFlow", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Completed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FromId")
                        .HasColumnType("int");

                    b.Property<long>("QaViolationId")
                        .HasColumnType("bigint");

                    b.Property<string>("TableName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ToId")
                        .HasColumnType("int");

                    b.Property<int?>("ToRoleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ToRoleId");

                    b.ToTable("qa_violation_flow");
                });

            modelBuilder.Entity("DETP.model.QaViolation.QaViolationHeadProcurement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApprovedById")
                        .HasColumnType("int");

                    b.Property<string>("Attachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("QaViolationFlowId")
                        .HasColumnType("bigint");

                    b.Property<long>("QaViolationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.ToTable("qa_violation_head_procurement");
                });

            modelBuilder.Entity("DETP.model.QaViolation.QaViolationStep", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("Step")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("qa_violation_step");
                });

            modelBuilder.Entity("DETP.model.QaViolation.QaViolationSubCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("QaViolationCategoryId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("QaViolationCategoryId");

                    b.ToTable("qa_violation_sub_categories");
                });

            modelBuilder.Entity("DETP.model.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("role_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("role");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("DETP.model.ShaRequestImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("path");

                    b.Property<int>("ShaRequestId")
                        .HasColumnType("int")
                        .HasColumnName("sha_request_id");

                    b.HasKey("Id");

                    b.ToTable("sha_request_image");
                });

            modelBuilder.Entity("DETP.model.SiteIncharge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DecisionById")
                        .HasColumnType("int")
                        .HasColumnName("decision_by");

                    b.Property<DateTime?>("DecisionDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("decision_date");

                    b.Property<int>("FlowId")
                        .HasColumnType("int")
                        .HasColumnName("flow_id");

                    b.Property<int>("ObservationId")
                        .HasColumnType("int")
                        .HasColumnName("observation_id");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("remarks");

                    b.Property<string>("TimeLoss")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("timeloss");

                    b.Property<string>("TimeVal")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("timeval");

                    b.Property<string>("ValueRec")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("valuerec");

                    b.Property<string>("WithinTargetDate")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("within_target_date");

                    b.HasKey("Id");

                    b.HasIndex("DecisionById");

                    b.ToTable("site_incharge");
                });

            modelBuilder.Entity("DETP.model.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("App")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("app");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("ForceReset")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("force_reset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<string>("NotedMail")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("noted_mail");

                    b.Property<string>("PNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("pno");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("password");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_on");

                    b.Property<int?>("department")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("department");

                    b.ToTable("users");
                });

            modelBuilder.Entity("DETP.model.UserRole", b =>
                {
                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("user_role");
                });

            modelBuilder.Entity("DETP.model.Assignee", b =>
                {
                    b.HasOne("DETP.model.User", "DecisionBy")
                        .WithMany()
                        .HasForeignKey("DecisionById");

                    b.Navigation("DecisionBy");
                });

            modelBuilder.Entity("DETP.model.BusinessHead", b =>
                {
                    b.HasOne("DETP.model.User", "AssignTo")
                        .WithMany()
                        .HasForeignKey("AssignToId");

                    b.HasOne("DETP.model.User", "DecisionBy")
                        .WithMany()
                        .HasForeignKey("DecisionById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssignTo");

                    b.Navigation("DecisionBy");
                });

            modelBuilder.Entity("DETP.model.Department", b =>
                {
                    b.HasOne("DETP.model.Division", "Division")
                        .WithMany()
                        .HasForeignKey("DivisionId");

                    b.Navigation("Division");
                });

            modelBuilder.Entity("DETP.model.DeptHod", b =>
                {
                    b.HasOne("DETP.model.User", "AssignTo")
                        .WithMany()
                        .HasForeignKey("AssignToId");

                    b.HasOne("DETP.model.User", "DecisionBy")
                        .WithMany()
                        .HasForeignKey("DecisionById");

                    b.Navigation("AssignTo");

                    b.Navigation("DecisionBy");
                });

            modelBuilder.Entity("DETP.model.Division", b =>
                {
                    b.HasOne("DETP.model.User", "DivisionHead")
                        .WithMany()
                        .HasForeignKey("DivisionHeadId");

                    b.Navigation("DivisionHead");
                });

            modelBuilder.Entity("DETP.model.EicDetp", b =>
                {
                    b.HasOne("DETP.model.User", "DecisionBy")
                        .WithMany()
                        .HasForeignKey("DecisionById");

                    b.Navigation("DecisionBy");
                });

            modelBuilder.Entity("DETP.model.HeadDetp", b =>
                {
                    b.HasOne("DETP.model.User", "DecisionBy")
                        .WithMany()
                        .HasForeignKey("DecisionById");

                    b.Navigation("DecisionBy");
                });

            modelBuilder.Entity("DETP.model.HodQaSha", b =>
                {
                    b.HasOne("DETP.model.User", "DecisionBy")
                        .WithMany()
                        .HasForeignKey("DecisionById");

                    b.Navigation("DecisionBy");
                });

            modelBuilder.Entity("DETP.model.ProjectIncharge", b =>
                {
                    b.HasOne("DETP.model.User", "DecisionBy")
                        .WithMany()
                        .HasForeignKey("DecisionById");

                    b.Navigation("DecisionBy");
                });

            modelBuilder.Entity("DETP.model.QAFlow", b =>
                {
                    b.HasOne("DETP.model.User", "From")
                        .WithMany()
                        .HasForeignKey("FromId");

                    b.HasOne("DETP.model.QAObservation", "QAObservation")
                        .WithMany("QaFlows")
                        .HasForeignKey("ObservationId");

                    b.HasOne("DETP.model.User", "To")
                        .WithMany()
                        .HasForeignKey("ToId");

                    b.Navigation("From");

                    b.Navigation("QAObservation");

                    b.Navigation("To");
                });

            modelBuilder.Entity("DETP.model.QAObservation", b =>
                {
                    b.HasOne("DETP.model.User", "BusinessHead")
                        .WithMany()
                        .HasForeignKey("BusinessHeadId");

                    b.HasOne("DETP.model.User", "DeptHod")
                        .WithMany()
                        .HasForeignKey("DeptHodId");

                    b.HasOne("DETP.model.Division", "Division")
                        .WithMany()
                        .HasForeignKey("DivisionId");

                    b.HasOne("DETP.model.User", "HeadDetp")
                        .WithMany()
                        .HasForeignKey("HeadDetpId");

                    b.HasOne("DETP.model.HodQaSha", "HodQaSha")
                        .WithMany()
                        .HasForeignKey("HodQaShaId");

                    b.HasOne("DETP.model.User", "ObservatioinBy")
                        .WithMany()
                        .HasForeignKey("ObservationById");

                    b.HasOne("DETP.model.User", "ProjectIncharge")
                        .WithMany()
                        .HasForeignKey("ProjectInchargeId");

                    b.HasOne("DETP.model.User", "QaOfficer")
                        .WithMany()
                        .HasForeignKey("QaOfficerId");

                    b.HasOne("DETP.model.User", "SiteIncharge")
                        .WithMany()
                        .HasForeignKey("SiteInchargeId");

                    b.Navigation("BusinessHead");

                    b.Navigation("DeptHod");

                    b.Navigation("Division");

                    b.Navigation("HeadDetp");

                    b.Navigation("HodQaSha");

                    b.Navigation("ObservatioinBy");

                    b.Navigation("ProjectIncharge");

                    b.Navigation("QaOfficer");

                    b.Navigation("SiteIncharge");
                });

            modelBuilder.Entity("DETP.model.QAOfficer", b =>
                {
                    b.HasOne("DETP.model.User", "DecisionBy")
                        .WithMany()
                        .HasForeignKey("DecisionById");

                    b.Navigation("DecisionBy");
                });

            modelBuilder.Entity("DETP.model.QaViolation.PenaltyDetail", b =>
                {
                    b.HasOne("DETP.model.QaViolation.QaViolationCategory", "Category")
                        .WithMany()
                        .HasForeignKey("QaViolationCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DETP.model.QaViolation.QaViolationSubCategory", "SubCategory")
                        .WithOne("PenaltyDetail")
                        .HasForeignKey("DETP.model.QaViolation.PenaltyDetail", "QaViolationSubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("DETP.model.QaViolation.QaViolation", b =>
                {
                    b.HasOne("DETP.model.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("DETP.model.QAObservation", "Observation")
                        .WithMany()
                        .HasForeignKey("ObservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DETP.model.QaViolation.QaViolationCategory", "Category")
                        .WithMany()
                        .HasForeignKey("QaViolationCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DETP.model.QaViolation.QaViolationSubCategory", "SubCategory")
                        .WithMany()
                        .HasForeignKey("QaViolationSubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("CreatedBy");

                    b.Navigation("Observation");

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("DETP.model.QaViolation.QaViolationApproval", b =>
                {
                    b.HasOne("DETP.model.User", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DETP.model.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApprovedBy");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("DETP.model.QaViolation.QaViolationCFOReview", b =>
                {
                    b.HasOne("DETP.model.User", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApprovedBy");
                });

            modelBuilder.Entity("DETP.model.QaViolation.QaViolationFlow", b =>
                {
                    b.HasOne("DETP.model.Role", "ToRole")
                        .WithMany()
                        .HasForeignKey("ToRoleId");

                    b.Navigation("ToRole");
                });

            modelBuilder.Entity("DETP.model.QaViolation.QaViolationHeadProcurement", b =>
                {
                    b.HasOne("DETP.model.User", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApprovedBy");
                });

            modelBuilder.Entity("DETP.model.QaViolation.QaViolationSubCategory", b =>
                {
                    b.HasOne("DETP.model.QaViolation.QaViolationCategory", "Category")
                        .WithMany()
                        .HasForeignKey("QaViolationCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("DETP.model.SiteIncharge", b =>
                {
                    b.HasOne("DETP.model.User", "DecisionBy")
                        .WithMany()
                        .HasForeignKey("DecisionById");

                    b.Navigation("DecisionBy");
                });

            modelBuilder.Entity("DETP.model.User", b =>
                {
                    b.HasOne("DETP.model.Department", "Department")
                        .WithMany()
                        .HasForeignKey("department");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("DETP.model.UserRole", b =>
                {
                    b.HasOne("DETP.model.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.HasOne("DETP.model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("DETP.model.QAObservation", b =>
                {
                    b.Navigation("QaFlows");
                });

            modelBuilder.Entity("DETP.model.QaViolation.QaViolationSubCategory", b =>
                {
                    b.Navigation("PenaltyDetail");
                });
#pragma warning restore 612, 618
        }
    }
}
