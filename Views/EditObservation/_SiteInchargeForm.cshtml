@model SiteInchargeCreateRequest

@{
    var current_dt = ViewData["current_dt"] as CurrentFlow;
    int userId = current_dt.UserId;
    string userName = current_dt.Name;
}

<div class="col-12 form-group">
    <label for="remarks">Site Incharge Input</label>
    <textarea class="form-control" asp-for="Remarks" placeholder="Remarks"></textarea>
</div>
<div class="col-12 form-group">
    <label for="valuerec">Value of Rectification (Rs.)</label>
    <input type="text" class="form-control" asp-for="ValueRec" placeholder="Value of Rectification (Rs.)">
</div>

<div class="col-12 form-group">
    <label for="timeloss">Time Loss (Days)</label>
    <input type="text" class="form-control" asp-for="TimeLoss" placeholder="Time Loss (Days)">
</div>
<div class="col-12 form-group">
    <label for="timeval">
        Time Value (Rs.)
    </label>
    <input type="text" class="form-control" asp-for="TimeVal" placeholder="Time Value (Rs.)">
</div>

<div class="col-12 form-group">
    <label for="remarks">Attachments</label>
    <input type="file" onchange="showImage(this)" class="form-control" name="fileInput" id="fileInput" multiple>
</div>
<div class="col-12">
    <div class="row" id="images">
    </div>
</div>
<div class="col-12 form-group">
    <label>Decision By</label>
    <select name="decision_by" id="decision_by" class="form-control">
        <option value="@userId">@userName</option>
    </select>
</div>
<div class="col-12 form-group">
    @{
        DateTime defaultDate = default(DateTime);

        var userDt = DateTime.Now.ToString("M/dd/yyyy HH:mm:ss");
    }
    <label>Decision Date</label>

    <input type="text" class="form-control" value="@userDt" disabled />

</div>


<script>
    var img_array = [];
    function getBase64(file) {
        var reader = new FileReader();
        reader.readAsDataURL(file);
        reader.onload = function () {

            img_array.push(reader.result);

        };
        reader.onerror = function (error) {
            console.log('Error: ', error);
        };
    }

    $(function () {
        img_array = [];
        var files = document.getElementById('fileInput').files;
        for (var i = 0; i < files.length; i++) {
            if (files.length > 0) {

                var ext = files[i].name.split('.').pop();
                var extension = ["png", "jpg", "jpeg", "gif", "pdf", "doc", "docx", "xls", "xlsx", "ppt", "pptx"]

                if (extension.includes(ext)) {
                    getBase64(files[i]);
                }

            }
        }
    });


    $('#myform').validate({
        rules: {
            ValueRec: {
                required: true,
                number: true
            },
            Remarks: {
                required: true
            },
            TimeLoss: {
                required: true,
                number: true
            },
            TimeVal: {
                required: true,
                number: true
            }
        },
        messages: {
            decision_date: {
                required: "This field is required"
            },
        },
        errorElement: 'span',
        errorPlacement: function (error, element) {
            error.addClass('invalid-feedback');
            element.closest('.form-group').append(error);
        },
        highlight: function (element, errorClass, validClass) {
            $(element).addClass('is-invalid');
        },
        unhighlight: function (element, errorClass, validClass) {
            $(element).removeClass('is-invalid');
        },
        submitHandler: function (form) {
            Submit(form);
        }
    });

    async function Submit(form) {
        if ($('#myform').valid()) {
            $('#modal-loader').modal('show')
            $('#submit_request').prop('disabled', true)

            
            var url = "@Url.Action("SaveSiteIncharge", "QAFlow")";
            imgs = [];
            $('.image-upload').each(function () {
                imgs.push($(this).data('src'));
            });

            let myData = new FormData(form);
            myData.append("Att", imgs)
            myData.append("ToId", '@current_dt.SubmitTo')
            myData.append("FromId", '@current_dt.FromId')
            myData.append("ObservationId", '@current_dt.ObservationId')
            myData.append("FlowId", '@current_dt.FlowId')

            request(url, myData)
                .then(response => {
                    $('#modal-loader').modal('hide')
                })
                .catch((error) => {
                    $('#modal-loader').modal('hide')
                    if (error.status == 400) {
                        let errors = error.responseJSON.reduce((acc, x) => {
                            acc[x.propertyName] = x.errorMessage;
                            return acc;
                        }, {});
                        console.log(errors)
                        $('#myform').validate().showErrors(errors);
                    }
                });



        }
    }
</script>